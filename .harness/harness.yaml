pipeline:
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: GitHub_Drone_Plugins_Org
        repoName: drone-buildx
        build: <+input>
        sparseCheckout: []
  stages:
    - stage:
        identifier: Test
        type: CI
        name: Test
        description: ""
        spec:
          cloneCodebase: true
          caching:
            enabled: false
            paths: []
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  identifier: Run_1
                  type: Run
                  name: Vet
                  spec:
                    connectorRef: Plugins_Docker_Hub_Connector
                    image: golang:1.22
                    shell: Sh
                    command: go vet ./...
              - step:
                  identifier: Run_2
                  type: Run
                  name: Test
                  spec:
                    connectorRef: Plugins_Docker_Hub_Connector
                    image: golang:1.22
                    shell: Sh
                    command: go test -cover ./...
    - parallel:
        - stage:
            identifier: linamd64
            type: CI
            name: linux-amd64
            description: ""
            spec:
              cloneCodebase: true
              caching:
                enabled: false
                paths: []
              platform:
                os: Linux
                arch: Amd64
              runtime:
                type: Cloud
                spec: {}
              execution:
                steps:
                  - step:
                      identifier: Build_Push
                      type: Run
                      name: Build Binary
                      spec:
                        connectorRef: Plugins_Docker_Hub_Connector
                        image: golang:1.22
                        shell: Sh
                        command: |-
                          # force go modules
                          export GOPATH=""

                          # disable cgo
                          export CGO_ENABLED=0

                          set -e
                          set -x

                          # linux
                          export GOOS=linux GOARCH=amd64

                          go build -a -tags netgo -o release/linux/amd64/drone-docker ./cmd/drone-docker
                  - step:
                      type: Run
                      name: Build Tarball
                      identifier: Build_Tarball
                      spec:
                        connectorRef: account.harnessImage
                        image: docker:27.3.1-dind
                        shell: Sh
                        command: sh buildkit/release.sh
                  - step:
                      type: Plugin
                      name: Build and Push on Tag
                      identifier: Docker_Build_Push
                      spec:
                        connectorRef: Plugins_Docker_Hub_Connector
                        image: plugins/docker:18
                        settings:
                          username: drone
                          password: <+secrets.getValue("Plugins_Docker_Hub_Pat")>
                          repo: plugins/buildx
                          dockerfile: docker/docker/Dockerfile.linux.amd64
                          auto_tag: "true"
                          auto_tag_suffix: linux-amd64
                      when:
                        stageStatus: Success
                        condition: <+codebase.build.type> == "tag"
                  - step:
                      type: BuildAndPushDockerRegistry
                      name: Build and Push on Branch
                      identifier: BuildAndPushDockerRegistry_1
                      spec:
                        connectorRef: Plugins_Docker_Hub_Connector
                        repo: plugins/buildx
                        tags:
                          - linux-amd64
                        caching: true
                        dockerfile: docker/docker/Dockerfile.linux.amd64
                      when:
                        stageStatus: Success
                        condition: <+codebase.build.type> == "branch"
        - stage:
            identifier: linamd64heroku
            type: CI
            name: linux-amd64-heroku
            description: ""
            spec:
              cloneCodebase: true
              caching:
                enabled: false
                paths: []
              platform:
                os: Linux
                arch: Amd64
              runtime:
                type: Cloud
                spec: {}
              execution:
                steps:
                  - step:
                      identifier: buildpush
                      type: Run
                      name: Build Binary
                      spec:
                        connectorRef: Plugins_Docker_Hub_Connector
                        image: golang:1.22
                        shell: Sh
                        command: |-
                          # force go modules
                          export GOPATH=""

                          # disable cgo
                          export CGO_ENABLED=0

                          set -e
                          set -x

                          # linux
                          export GOOS=linux GOARCH=amd64

                          go build -a -tags netgo -o release/linux/amd64/drone-heroku ./cmd/drone-heroku
                  - step:
                      type: Run
                      name: Build Tarball
                      identifier: Build_Tarball
                      spec:
                        connectorRef: account.harnessImage
                        image: docker:27.3.1-dind
                        shell: Sh
                        command: sh buildkit/release.sh
                  - step:
                      type: Plugin
                      name: Build and Push on Tag
                      identifier: Docker_Build_Push
                      spec:
                        connectorRef: Plugins_Docker_Hub_Connector
                        image: plugins/docker:18
                        settings:
                          username: drone
                          password: <+secrets.getValue("Plugins_Docker_Hub_Pat")>
                          repo: plugins/buildx-heroku
                          dockerfile: docker/heroku/Dockerfile.linux.amd64
                          auto_tag: "true"
                          auto_tag_suffix: linux-amd64
                      when:
                        stageStatus: Success
                        condition: <+codebase.build.type> == "tag"
                  - step:
                      type: BuildAndPushDockerRegistry
                      name: Build and Push on Branch
                      identifier: BuildAndPushDockerRegistry_1
                      spec:
                        connectorRef: Plugins_Docker_Hub_Connector
                        repo: plugins/buildx-heroku
                        tags:
                          - linux-amd64
                        caching: true
                        dockerfile: docker/heroku/Dockerfile.linux.amd64
                      when:
                        stageStatus: Success
                        condition: <+codebase.build.type> == "branch"
    - parallel:
        - stage:
            identifier: linarm64
            type: CI
            name: linux-arm64
            description: ""
            spec:
              cloneCodebase: true
              caching:
                enabled: false
                paths: []
              platform:
                os: Linux
                arch: Arm64
              runtime:
                type: Cloud
                spec: {}
              execution:
                steps:
                  - step:
                      identifier: buildpush
                      type: Run
                      name: Build Binary
                      spec:
                        connectorRef: Plugins_Docker_Hub_Connector
                        image: golang:1.22
                        shell: Sh
                        command: |-
                          # force go modules
                          export GOPATH=""

                          # disable cgo
                          export CGO_ENABLED=0

                          set -e
                          set -x

                          # linux
                          export GOOS=linux GOARCH=arm64

                          go build -a -tags netgo -o release/linux/arm64/drone-docker ./cmd/drone-docker
                  - step:
                      type: Run
                      name: Build Tarball
                      identifier: Build_Tarball
                      spec:
                        connectorRef: account.harnessImage
                        image: docker:27.3.1-dind
                        shell: Sh
                        command: sh buildkit/release.sh
                  - step:
                      type: Plugin
                      name: Build and Push on Tag
                      identifier: Plugin_1
                      spec:
                        connectorRef: Plugins_Docker_Hub_Connector
                        image: plugins/docker:18
                        settings:
                          username: drone
                          password: <+secrets.getValue("Plugins_Docker_Hub_Pat")>
                          repo: plugins/buildx
                          dockerfile: docker/docker/Dockerfile.linux.arm64
                          auto_tag: "true"
                          auto_tag_suffix: linux-arm64
                      when:
                        stageStatus: Success
                        condition: <+codebase.build.type> == "tag"
                  - step:
                      type: BuildAndPushDockerRegistry
                      name: Build and Push on Branch
                      identifier: BuildAndPushDockerRegistry_1
                      spec:
                        connectorRef: Plugins_Docker_Hub_Connector
                        repo: plugins/buildx
                        tags:
                          - linux-arm64
                        caching: true
                        dockerfile: docker/docker/Dockerfile.linux.arm64
                      when:
                        stageStatus: Success
                        condition: <+codebase.build.type> == "branch"
        - stage:
            identifier: linarm64heroku
            type: CI
            name: linux-arm64-heroku
            description: ""
            spec:
              cloneCodebase: true
              caching:
                enabled: false
                paths: []
              platform:
                os: Linux
                arch: Arm64
              runtime:
                type: Cloud
                spec: {}
              execution:
                steps:
                  - step:
                      identifier: buildpush
                      type: Run
                      name: Build Binary
                      spec:
                        connectorRef: Plugins_Docker_Hub_Connector
                        image: golang:1.22
                        shell: Sh
                        command: |-
                          # force go modules
                          export GOPATH=""

                          # disable cgo
                          export CGO_ENABLED=0

                          set -e
                          set -x

                          # linux
                          export GOOS=linux GOARCH=arm64

                          go build -a -tags netgo -o release/linux/arm64/drone-heroku ./cmd/drone-heroku
                  - step:
                      type: Run
                      name: Build Tarball
                      identifier: Build_Tarball
                      spec:
                        connectorRef: account.harnessImage
                        image: docker:27.3.1-dind
                        shell: Sh
                        command: sh buildkit/release.sh
                  - step:
                      type: Plugin
                      name: Build and Push on Tag
                      identifier: Docker_Build_Push
                      spec:
                        connectorRef: Plugins_Docker_Hub_Connector
                        image: plugins/docker:18
                        settings:
                          username: drone
                          password: <+secrets.getValue("Plugins_Docker_Hub_Pat")>
                          repo: plugins/buildx-heroku
                          dockerfile: docker/heroku/Dockerfile.linux.arm64
                          auto_tag: "true"
                          auto_tag_suffix: linux-arm64
                      when:
                        stageStatus: Success
                        condition: <+codebase.build.type> == "tag"
                  - step:
                      type: BuildAndPushDockerRegistry
                      name: Build and Push on Branch
                      identifier: BuildAndPushDockerRegistry_1
                      spec:
                        connectorRef: Plugins_Docker_Hub_Connector
                        repo: plugins/buildx-heroku
                        tags:
                          - linux-arm64
                        caching: true
                        dockerfile: docker/heroku/Dockerfile.linux.arm64
                      when:
                        stageStatus: Success
                        condition: <+codebase.build.type> == "branch"
    - stage:
        name: win-1809-amd64
        identifier: win1809amd64
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          caching:
            enabled: false
            paths: []
          execution:
            steps:
              - step:
                  type: Run
                  name: Build Binary
                  identifier: Build_Binary
                  spec:
                    connectorRef: Plugins_Docker_Hub_Connector
                    image: golang:1.22
                    shell: Sh
                    command: |-
                      # force go modules
                      export GOPATH=""

                      # disable cgo
                      export CGO_ENABLED=0

                      set -e
                      set -x

                      # linux
                      GOOS=windows

                      go build -o release/windows/amd64/drone-docker.exe ./cmd/drone-docker
              - step:
                  type: Plugin
                  name: Build and Push on Tag
                  identifier: Docker_Build_Push
                  spec:
                    connectorRef: Plugins_Docker_Hub_Connector
                    image: plugins/docker
                    settings:
                      username: drone
                      password: <+secrets.getValue("Plugins_Docker_Hub_Pat")>
                      repo: plugins/buildx
                      dockerfile: docker/docker/Dockerfile.windows.amd64.1809
                      auto_tag: "true"
                      auto_tag_suffix: windows-1809-amd64
                  when:
                    stageStatus: Success
                    condition: <+codebase.build.type> == "tag"
              - step:
                  type: BuildAndPushDockerRegistry
                  name: BuildAndPushDockerRegistry_1
                  identifier: BuildAndPushDockerRegistry_1
                  spec:
                    connectorRef: Plugins_Docker_Hub_Connector
                    repo: plugins/buildx
                    tags:
                      - windows-1809-amd64
                    caching: false
                    dockerfile: docker/docker/Dockerfile.windows.amd64.1809
                  when:
                    stageStatus: Success
                    condition: <+codebase.build.type> == "branch"
          buildIntelligence:
            enabled: false
          infrastructure:
            type: VM
            spec:
              type: Pool
              spec:
                poolName: windows-2019
                os: Windows
        delegateSelectors:
          - windows-vm
    - stage:
        identifier: winamd64
        type: CI
        name: win-ltsc2022-amd64
        description: ""
        spec:
          cloneCodebase: true
          caching:
            enabled: false
            paths: []
          platform:
            os: Windows
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  identifier: build_amd64ltsc2022
                  type: Run
                  name: Build Binary
                  spec:
                    connectorRef: Plugins_Docker_Hub_Connector
                    image: golang:1.22
                    shell: Sh
                    command: |-
                      # force go modules
                      export GOPATH=""

                      # disable cgo
                      export CGO_ENABLED=0

                      set -e
                      set -x

                      # windows
                      GOOS=windows

                      go build -o release/windows/amd64/drone-docker.exe ./cmd/drone-docker
              - step:
                  type: Plugin
                  name: Build and Push on Tag
                  identifier: Plugin_1
                  spec:
                    connectorRef: Plugins_Docker_Hub_Connector
                    image: plugins/docker
                    settings:
                      username: drone
                      password: <+secrets.getValue("Plugins_Docker_Hub_Pat")>
                      repo: plugins/buildx
                      dockerfile: docker/docker/Dockerfile.windows.amd64.ltsc2022
                      auto_tag: "true"
                      auto_tag_suffix: windows-ltsc2022-amd64
                  when:
                    stageStatus: Success
                    condition: <+codebase.build.type> == "tag"
              - step:
                  type: BuildAndPushDockerRegistry
                  name: Build and Push on Branch
                  identifier: BuildAndPushDockerRegistry_1
                  spec:
                    connectorRef: Plugins_Docker_Hub_Connector
                    repo: plugins/buildx
                    tags:
                      - windows-ltsc2022-amd64
                    caching: false
                    dockerfile: docker/docker/Dockerfile.windows.amd64.ltsc2022
                  when:
                    stageStatus: Success
                    condition: <+codebase.build.type> == "branch"
          buildIntelligence:
            enabled: false
    - parallel:
        - stage:
            identifier: Manifest
            type: CI
            name: Manifest and Release
            description: ""
            spec:
              cloneCodebase: true
              caching:
                enabled: false
                paths: []
              execution:
                steps:
                  - step:
                      identifier: Plugin_1
                      type: Plugin
                      name: Manifest
                      spec:
                        connectorRef: Plugins_Docker_Hub_Connector
                        image: plugins/manifest
                        settings:
                          username: drone
                          password: <+secrets.getValue("Plugins_Docker_Hub_Pat")>
                          auto_tag: "true"
                          ignore_missing: "true"
                          spec: docker/docker/manifest.tmpl
                      when:
                        stageStatus: Success
                        condition: |
                          <+codebase.build.type> == "tag" || "branch"
                  - step:
                      identifier: Build_Binaries
                      type: Run
                      name: Build Binaries
                      spec:
                        connectorRef: Plugins_Docker_Hub_Connector
                        image: golang:1.22
                        shell: Sh
                        command: |-
                          GOOS=linux   GOARCH=amd64   go build -ldflags "-s -w" -a -tags netgo -o release/drone-buildx-linux-amd64 ./cmd/drone-docker
                          GOOS=linux   GOARCH=arm64   go build -ldflags "-s -w" -a -tags netgo -o release/drone-buildx-linux-arm64 ./cmd/drone-docker
                          GOOS=darwin  GOARCH=amd64   go build -ldflags "-s -w" -a -tags netgo -o release/drone-buildx-darwin-amd64 ./cmd/drone-docker
                          GOOS=darwin  GOARCH=arm64   go build -ldflags "-s -w" -a -tags netgo -o release/drone-buildx-darwin-arm64 ./cmd/drone-docker
                          GOOS=windows GOARCH=amd64   go build -ldflags "-s -w" -a -tags netgo -o release/drone-buildx-windows-amd64 ./cmd/drone-docker

                          apt-get update -y
                          apt-get install -y zstd
                          zstd release/drone-buildx-linux-amd64
                          zstd release/drone-buildx-linux-arm64
                          zstd release/drone-buildx-darwin-arm64
                          zstd release/drone-buildx-darwin-amd64
                          zstd release/drone-buildx-windows-amd64
                        envVariables:
                          CGO_ENABLED: "0"
                          GO111MODULE: "on"
                      when:
                        stageStatus: Success
                        condition: |
                          <+codebase.build.type> == "tag"
                  - step:
                      identifier: Release
                      type: Plugin
                      name: Release
                      spec:
                        connectorRef: Plugins_Docker_Hub_Connector
                        image: plugins/github-release
                        settings:
                          api_key: <+secrets.getValue("ci_job_github_pat")>
                          title: <+trigger.tag>
                          files: release/drone-buildx-*.zst
                      when:
                        stageStatus: Success
                        condition: <+codebase.build.type> == "tag"
              platform:
                os: Linux
                arch: Amd64
              runtime:
                type: Cloud
                spec: {}
            when:
              pipelineStatus: Success
            variables:
              - name: DRONE_REPO_OWNER
                type: String
                description: ""
                required: false
                value: drone-plugins
        - stage:
            identifier: Manifest_Heroku
            type: CI
            name: Manifest - Heroku
            description: ""
            spec:
              cloneCodebase: true
              caching:
                enabled: false
                paths: []
              platform:
                os: Linux
                arch: Amd64
              runtime:
                type: Cloud
                spec: {}
              execution:
                steps:
                  - step:
                      identifier: Manifest
                      type: Plugin
                      name: Manifest
                      spec:
                        connectorRef: Plugins_Docker_Hub_Connector
                        image: plugins/manifest
                        settings:
                          username: drone
                          password: <+secrets.getValue("Plugins_Docker_Hub_Pat")>
                          auto_tag: "true"
                          ignore_missing: "true"
                          spec: docker/heroku/manifest.tmpl
                      when:
                        stageStatus: Success
                        condition: |
                          <+codebase.build.type> == "tag" || "branch"
            when:
              pipelineStatus: Success
            variables:
              - name: DRONE_REPO_OWNER
                type: String
                description: ""
                required: false
                value: drone-plugins
  projectIdentifier: Drone_Plugins
  identifier: dronebuildxharness
  name: drone-buildx-harness
